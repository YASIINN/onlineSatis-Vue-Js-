{"remainingRequest":"C:\\Users\\Yasin\\Desktop\\onlinesatis-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Yasin\\Desktop\\onlinesatis-vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Yasin\\Desktop\\onlinesatis-vue\\src\\routers\\company.js","dependencies":[{"path":"C:\\Users\\Yasin\\Desktop\\onlinesatis-vue\\src\\routers\\company.js","mtime":1562677749658},{"path":"C:\\Users\\Yasin\\Desktop\\onlinesatis-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yasin\\Desktop\\onlinesatis-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Yasin\\Desktop\\onlinesatis-vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Header from \"../components/shared/Header\";\nimport Footer from \"../components/shared/Footer\";\nimport Aside from \"../components/shared/Aside\";\nimport BreadCrumbs from \"../components/shared/BreadCrumbs\";\nimport store from \"../store/store\";\n\nvar NewCompany = function NewCompany(resolve) {\n  require.ensure(['../components/Company/NewCompany'], function () {\n    resolve(require(\"../components/Company/NewCompany\"));\n  });\n};\n\nvar CompanyList = function CompanyList(resolve) {\n  require.ensure(['../components/Company/CompanyList'], function () {\n    resolve(require(\"../components/Company/CompanyList\"));\n  });\n};\n\nvar NewSector = function NewSector(resolve) {\n  require.ensure(['../components/Sector/DefineSector'], function () {\n    resolve(require(\"../components/Sector/DefineSector\"));\n  });\n};\n\nvar SectorList = function SectorList(resolve) {\n  require.ensure(['../components/Sector/SectorList'], function () {\n    resolve(require(\"../components/Sector/SectorList\"));\n  });\n};\n\nvar AddUserCompany = function AddUserCompany(resolve) {\n  require.ensure(['../components/Company/AddUserCompany'], function () {\n    resolve(require(\"../components/Company/AddUserCompany\"));\n  });\n};\n\nvar MainCompany = function MainCompany(resolve) {\n  require.ensure(['../components/Company/MainCompany'], function () {\n    resolve(require(\"../components/Company/MainCompany\"));\n  });\n};\n\nvar companyrouters = {\n  routes: {\n    addnewcompany: {\n      path: '/Firmaekle',\n      name: 'NewCompany',\n      components: {\n        default: MainCompany,\n        'appheader': Header,\n        'appside': Aside,\n        'appbreadcrumb': BreadCrumbs,\n        'appfooter': Footer\n      },\n      beforeEnter: function beforeEnter(to, from, next) {\n        store.dispatch('initAuth').then(function (res) {\n          if (res == true) {\n            next();\n          } else {\n            next('/GirisYap');\n          }\n        });\n      },\n      children: [{\n        path: \"\",\n        component: NewCompany\n      }]\n    },\n    addusercompany: {\n      path: '/Firmaata/:userid',\n      name: 'AddCompanytouser',\n      components: {\n        default: AddUserCompany,\n        'appheader': Header,\n        'appside': Aside,\n        'appbreadcrumb': BreadCrumbs,\n        'appfooter': Footer\n      },\n      beforeEnter: function beforeEnter(to, from, next) {\n        store.dispatch('initAuth').then(function (res) {\n          if (res == true) {\n            next();\n          } else {\n            next('/GirisYap');\n          }\n        });\n      }\n    },\n    sectorlist: {\n      path: '/Sektorler',\n      name: 'Sectors',\n      components: {\n        default: SectorList,\n        'appheader': Header,\n        'appside': Aside,\n        'appbreadcrumb': BreadCrumbs,\n        'appfooter': Footer\n      },\n      beforeEnter: function beforeEnter(to, from, next) {\n        store.dispatch('initAuth').then(function (res) {\n          if (res == true) {\n            next();\n          } else {\n            next('/GirisYap');\n          }\n        });\n      }\n    },\n    definesector: {\n      path: '/Sektortanimla',\n      name: 'definasector',\n      components: {\n        default: NewSector,\n        'appheader': Header,\n        'appside': Aside,\n        'appbreadcrumb': BreadCrumbs,\n        'appfooter': Footer\n      },\n      beforeEnter: function beforeEnter(to, from, next) {\n        store.dispatch('initAuth').then(function (res) {\n          if (res == true) {\n            next();\n          } else {\n            next('/GirisYap');\n          }\n        });\n      }\n    },\n    companylist: {\n      path: '/Firmalarim',\n      name: 'CompanyList',\n      components: {\n        default: CompanyList,\n        'appheader': Header,\n        'appside': Aside,\n        'appbreadcrumb': BreadCrumbs,\n        'appfooter': Footer\n      },\n      beforeEnter: function beforeEnter(to, from, next) {\n        store.dispatch('initAuth').then(function (res) {\n          if (res == true) {\n            next();\n          } else {\n            next('/GirisYap');\n          }\n        });\n      }\n    }\n  }\n};\nexport default companyrouters;",{"version":3,"sources":["C:\\Users\\Yasin\\Desktop\\onlinesatis-vue\\src\\routers\\company.js"],"names":["Header","Footer","Aside","BreadCrumbs","store","NewCompany","resolve","require","ensure","CompanyList","NewSector","SectorList","AddUserCompany","MainCompany","companyrouters","routes","addnewcompany","path","name","components","default","beforeEnter","to","from","next","dispatch","then","res","children","component","addusercompany","sectorlist","definesector","companylist"],"mappings":"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","sourcesContent":["import Header from '../components/shared/Header'\nimport Footer from '../components/shared/Footer'\nimport Aside from '../components/shared/Aside'\nimport BreadCrumbs from '../components/shared/BreadCrumbs'\nimport store from '../store/store'\n\nconst NewCompany = resolve => {\n  require.ensure(['../components/Company/NewCompany'], () => {\n    resolve(require('../components/Company/NewCompany'))\n  })\n}\nconst CompanyList = resolve => {\n  require.ensure(['../components/Company/CompanyList'], () => {\n    resolve(require('../components/Company/CompanyList'))\n  })\n}\n\nconst NewSector = resolve => {\n  require.ensure(['../components/Sector/DefineSector'], () => {\n    resolve(require('../components/Sector/DefineSector'))\n  })\n}\nconst SectorList = resolve => {\n  require.ensure(['../components/Sector/SectorList'], () => {\n    resolve(require('../components/Sector/SectorList'))\n  })\n}\n\nconst AddUserCompany = resolve =>{\n  require.ensure(['../components/Company/AddUserCompany'], () => {\n    resolve(require('../components/Company/AddUserCompany'))\n  })\n}\nconst MainCompany = resolve =>{\n  require.ensure(['../components/Company/MainCompany'], () => {\n    resolve(require('../components/Company/MainCompany'))\n  })\n}\n\nconst companyrouters = {\n  routes: {\n    addnewcompany: {\n      path: '/Firmaekle',\n      name: 'NewCompany',\n      components: {\n        default: MainCompany,\n        'appheader': Header,\n        'appside': Aside,\n        'appbreadcrumb': BreadCrumbs,\n        'appfooter': Footer\n      },\n      beforeEnter(to, from, next) {\n        store.dispatch('initAuth').then((res) => {\n          if (res == true) {\n            next()\n          } else {\n            next('/GirisYap')\n          }\n        })\n      },\n      children: [\n        {path:\"\",component:NewCompany},\n      ]\n\n    },\n    addusercompany:{\n      path: '/Firmaata/:userid',\n      name: 'AddCompanytouser',\n      components: {\n        default: AddUserCompany,\n        'appheader': Header,\n        'appside': Aside,\n        'appbreadcrumb': BreadCrumbs,\n        'appfooter': Footer\n      },\n      beforeEnter(to, from, next) {\n        store.dispatch('initAuth').then((res) => {\n          if (res == true) {\n            next()\n          } else {\n            next('/GirisYap')\n          }\n        })\n      }\n    },\n    sectorlist:{\n      path: '/Sektorler',\n      name: 'Sectors',\n      components: {\n        default: SectorList,\n        'appheader': Header,\n        'appside': Aside,\n        'appbreadcrumb': BreadCrumbs,\n        'appfooter': Footer\n      },\n      beforeEnter(to, from, next) {\n        store.dispatch('initAuth').then((res) => {\n          if (res == true) {\n            next()\n          } else {\n            next('/GirisYap')\n          }\n        })\n      }\n    },\n    definesector: {\n      path: '/Sektortanimla',\n      name: 'definasector',\n      components: {\n        default: NewSector,\n        'appheader': Header,\n        'appside': Aside,\n        'appbreadcrumb': BreadCrumbs,\n        'appfooter': Footer\n      },\n      beforeEnter(to, from, next) {\n        store.dispatch('initAuth').then((res) => {\n          if (res == true) {\n            next()\n          } else {\n            next('/GirisYap')\n          }\n        })\n      }\n    },\n    companylist: {\n      path: '/Firmalarim',\n      name: 'CompanyList',\n      components: {\n        default: CompanyList,\n        'appheader': Header,\n        'appside': Aside,\n        'appbreadcrumb': BreadCrumbs,\n        'appfooter': Footer\n      },\n      beforeEnter(to, from, next) {\n        store.dispatch('initAuth').then((res) => {\n          if (res == true) {\n            next()\n          } else {\n            next('/GirisYap')\n          }\n        })\n      }\n    }\n  }\n}\n\nexport default companyrouters\n"]}]}